name: update
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Upstream version, e.g. v29.2'
        required: true
        type: string

# Prevent writing to the repository using the CI token.
# Ref: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#permissions
permissions: read-all

env:
  # https://consoledonottrack.com/
  DO_NOT_TRACK: 1

jobs:

  test:
    runs-on: ubuntu-latest
    if: ${{ inputs.version }}
    steps:
      - name: Print the input version to STDOUT
        run: echo ${{ inputs.version }}

  build-conformance-linux-x64:
    runs-on: ubuntu-latest
    if: ${{ inputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-bazel-cache
      - run: npm ci
      - run: npx update-conformance ${{ inputs.version }}
      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.16.0/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"
      - name: Build Binary
        run: |
          cd packages/protobuf-conformance/.tmp
          USE_BAZEL_VERSION=7.1.2 BAZEL_CXXOPTS="-std=c++17" bazel build conformance:conformance_test_runner
      - name: Rename Binary
        run: |
          mkdir -p .tmp/bin
          cp packages/protobuf-conformance/.tmp/bazel-bin/conformance/conformance_test_runner packages/protobuf-conformance/conformance_test_runner-linux-x64
          chmod +x packages/protobuf-conformance/conformance_test_runner-linux-x64
      - uses: actions/upload-artifact@v4
        with:
          name: conformance_test_runner-linux-x64
          path: packages/protobuf-conformance/.tmp/bazel-bin/conformance/conformance_test_runner

  build-conformance-darwin-x64:
    runs-on: macos-13
    if: ${{ inputs.version }}
    env:
      GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - uses: actions/cache@v4
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-bazel-cache
      - run: npm ci
      - run: npm run -w packages/protobuf-conformance update ${{inputs.version}}
      - run: npm run -w packages/protobuf-conformance build-upstream
      - uses: actions/upload-artifact@v4
        with:
          name: conformance_test_runner-darwin-x64
          path: packages/protobuf-conformance/.tmp/bazel-bin/conformance/conformance_test_runner

  pr:
    runs-on: ubuntu-latest
    needs: [build-conformance-darwin-x64, build-conformance-linux-x64]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: conformance_test_runner-darwin-x64
          path: packages/protobuf-conformance/conformance_test_runner-darwin-x64
      - run: chmod +x packages/protobuf-conformance/conformance_test_runner-darwin-x64
      - uses: actions/download-artifact@v4
        with:
          name: conformance_test_runner-linux-x64
          path: packages/protobuf-conformance/conformance_test_runner-linux-x64
      - run: chmod +x packages/protobuf-conformance/conformance_test_runner-linux-x64
      - run: npm ci
      - run: npx update-conformance ${{inputs.version}}
      # TODO open PR